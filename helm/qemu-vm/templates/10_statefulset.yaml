apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-vm
  name: {{ .Release.Name }}-vm
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Release.Name }}-vm
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-pvc
    spec:
      storageClassName: {{ .Values.storage_class }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.vm_claim_size }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-vm
  template:
    metadata:
      annotations: 
      {{- if .Values.networks }}
        k8s.v1.cni.cncf.io/networks: {{ .Values.networks | toJson | quote }}
      {{- else }}
        {}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-vm
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ .Values.nodeSelector | toYaml | indent 8 | trim }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:  {{ .Values.tolerations | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.userdata }}
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}-config
      {{ end }}
      containers:
      - image: "{{ .Values.image_repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: "{{ .Values.image_pull_policy }}"
        name: vm
        env:
        - name: USERDATA_SHA
          value: {{ if and .Values.userdata_redeploy .Values.userdata }}{{ .Values.userdata | sha256sum }}{{else}}NA{{end}}
        - name: SECRET_SHA
          value: {{ if and .Values.secrets_redeploy .Values.secrets }}{{ .Values.secrets | toString | sha256sum }}{{else}}NA{{end}}
        {{- if .Values.secrets }}
        {{- range $key, $val := .Values.secrets }}
        - name: {{ $key | replace "-" "_" }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Release.Name }}-secret
              key: {{ $key | replace "-" "_"  }}
        {{ end }}{{ end }}
        args:
        {{ if .Values.cpu }}- --cpu={{ .Values.cpu }}{{ end }}
        {{ if .Values.ram }}- --ram={{ .Values.ram }}{{ end }}
        {{- range .Values.disks }}
        - --disk={{ . }}
        {{- end }}
        {{- if .Values.immutable }}
        - --immutable
        {{- end }}
        {{ if .Values.vm_image_source }}- --image-source={{ .Values.vm_image_source | quote }}{{ end }}
        {{- if .Values.vm_image_always_pull }}
        - --image-always-pull
        {{- end }}
        {{- if .Values.passthrough_first_nic }}
        - --passthrough-first-nic
        - --nic=eth0
        {{- end }}
        {{- range .Values.networks }}
        - --nic={{ .interface }}
        {{- end }}
        {{ if .Values.userdata }}- --user-data=/vm/cloud-init/user-data{{ end }}
        {{- if .Values.secrets }}
        {{- range $key, $val := .Values.secrets }}
        - --instance-secret-key={{ $key | replace "-" "_" }}
        {{- end }}
        {{- end }}
        
        volumeMounts:
        - name: {{ .Release.Name }}-pvc
          mountPath: /vm/data
        {{- if .Values.userdata }}
        - name: config
          mountPath: /vm/cloud-init
        {{- end }}
        
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/bash", "/vm/shutdown" ]

        {{- if .Values.readinessProbe }}
        readinessProbe: {{ toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        
        {{- if .Values.livenessProbe }}
        livenessProbe: {{ toYaml .Values.livenessProbe | nindent 10 }}
        {{- end }}

        {{- if .Values.startupProbe }}
        startupProbe: {{ toYaml .Values.startupProbe | nindent 10 }}
        {{- end }}

        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
    
        resources: {{ toYaml .Values.resources | nindent 10 }}
